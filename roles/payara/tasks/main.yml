---

- name: 'Create glassfish group'
  group:
    name: glassfish
    state: present

- name: 'Create glassfish user'
  user:
    name: glassfish
    createhome: true
    group: glassfish
    shell: /bin/bash

- name: 'Create downloads directory'
  file:
    path: /home/glassfish/downloads
    state: directory
    owner: glassfish
    group: glassfish
    mode: 0775

- name: 'Create install directory'
  file:
    path: /home/glassfish/install
    state: directory
    owner: glassfish
    group: glassfish
    mode: 0775

- name: 'Create scripts directory'
  file:
    path: /home/glassfish/scripts
    state: directory
    owner: glassfish
    group: glassfish
    mode: 0775

- name: 'Install payara init script'
  template:
    src: templates/payara-init.j2
    dest: '/usr/local/bin/payara-init'
    owner: root
    group: root
    mode: 0775
     
- name: 'Check if .bash_profile exists'
  stat:
    path: /home/glassfish/.bash_profile
  register: bashProfileResult

- name: 'Add path to payara executable to PATH variable in .bash_profile'
  lineinfile:
    path: /home/glassfish/.bash_profile
    line: 'export PATH=$HOME/{{ payara_directory }}/bin:$PATH'
    regexp: '^export PATH=\$HOME\/payara[0-9]+(\.{1}[0-9]+)*\/bin:\$PATH$'
  when: bashProfileResult.stat.exists is defined and bashProfileResult.stat.exists == true

- name: 'Add path to payara executable to PATH variable in .profile'
  lineinfile:
    path: /home/glassfish/.profile
    line: 'export PATH=$HOME/{{ payara_directory }}/bin:$PATH'
    regexp: '^export PATH=\$HOME\/payara[0-9]+(\.{1}[0-9]+)*\/bin:\$PATH$'
  when: bashProfileResult.stat.exists is defined and bashProfileResult.stat.exists == false

- name: 'Check payara package'
  stat:
    path: /home/glassfish/downloads/payara-{{ payara_version }}.zip
  register: packageResult

- name: 'Download payara'
  get_url:
    url: http://search.maven.org/remotecontent?filepath=fish/payara/distributions/payara/{{ payara_version }}/payara-{{ payara_version }}.zip
    dest: /home/glassfish/downloads
    owner: glassfish
    group: glassfish
    mode: 0664
  when: packageResult.stat.exists is defined and packageResult.stat.exists == false

- name: 'Check payara setup script'
  stat:
    path: /home/glassfish/scripts/setup-glassfish.py
  register: scriptResult

- name: 'Download payara setup script'
  get_url:
    url: https://icatproject.org/misc/scripts/setup-glassfish.py
    dest: /home/glassfish/scripts
    owner: glassfish
    group: glassfish
    mode: 0664
  when: scriptResult.stat.exists is defined and scriptResult.stat.exists == false

- name: 'Check payara installation'
  stat:
    path: /home/glassfish/{{ payara_directory }}
  register: installationResult

- name: 'Unarchive payara if not installed'
  unarchive:
    src: /home/glassfish/downloads/payara-{{ payara_version }}.zip
    dest: /home/glassfish
    remote_src: true
    owner: glassfish
    group: glassfish
  when: installationResult.stat.exists is defined and installationResult.stat.exists == false

- name: 'Setup payara if not setup'
  import_tasks: tasks/installation.yml
  when: (ansible_local is not defined) or (ansible_local.local is not defined) or (ansible_local.local.{{ heading }} is not defined) or (ansible_local.local.{{ heading }}.payara is not defined) or (ansible_local.local.{{ heading }}.payara != 'true')
