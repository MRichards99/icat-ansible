---

- name: 'Install common icat-server dependencies'
  package: name={{ item }} state=present
  with_items:
  - python-suds
  - python-requests

- name: 'Install icat-server dependencies for Red Hat systems'
  package: name={{ item }} state=present
  with_items:
  - MySQL-python
  - mysql-connector-java
  when: ansible_os_family == 'RedHat'

- name: 'Install icat-server packages for Debian systems'
  package: name={{ item }} state=present
  with_items:
  - python-mysqldb
  - libmysql-java
  when: ansible_os_family == 'Debian'

- name: 'Check glassfish domain'
  stat:
    path: /home/glassfish/{{ payara_directory }}/glassfish/domains/{{ payara_domain }}/lib/ext
  register: domainResult

- name: 'Create symlink to mysql connector library'
  file:
    src: /usr/share/java/mysql-connector-java.jar
    path: /home/glassfish/{{ payara_directory }}/glassfish/domains/{{ payara_domain }}/lib/ext/mysql-connector-java.jar
    state: link
    owner: glassfish
    group: glassfish
  when: domainResult.stat.exists is defined and domainResult.stat.exists == true
  notify: payara-handler

- name: 'Check icat-server package'
  stat:
    path: /home/glassfish/downloads/icat.server-4.9.1-distro.zip
  register: packageResult

- name: 'Download icat-server'
  get_url:
    url: https://repo.icatproject.org/repo/org/icatproject/icat.server/4.9.1/icat.server-4.9.1-distro.zip
    dest: /home/glassfish/downloads
    owner: glassfish
    group: glassfish
    mode: 0664
  when: packageResult.stat.exists is defined and packageResult.stat.exists == false

- name: 'Check icat-server installation'
  stat:
    path: /home/glassfish/install/icat.server
  register: installationResult

- name: 'Unarchive icat-server if not installed'
  unarchive:
    src: /home/glassfish/downloads/icat.server-4.9.1-distro.zip
    dest: /home/glassfish/install
    remote_src: true
    owner: glassfish
    group: glassfish
  when: installationResult.stat.exists is defined and installationResult.stat.exists == false

- name: 'Create bin directory for the glassfish user'
  file:
    path: /home/glassfish/bin
    state: directory
    owner: glassfish
    group: glassfish
    mode: 0775

- name: 'Add path to glassfish bin directory for icat-server to PATH variable'
  lineinfile:
    path: /home/glassfish/.bashrc
    line: 'export PATH=$PATH:/home/glassfish/bin'

- name: 'Create a stash directory for assembling configurations'
  file:
    path: /home/glassfish/stash
    state: directory
    owner: glassfish
    group: glassfish
    mode: 0775

- name: 'Create a stash directory for icat-server configs'
  file:
    path: /home/glassfish/stash/icat-server
    state: directory
    owner: glassfish
    group: glassfish
    mode: 0775

- name: 'Copy over glassfish setup.properties'
  template:
    src: roles/payara/templates/setup.properties.j2
    dest: /home/glassfish/stash/icat-server/1-part
    owner: glassfish
    group: glassfish
    mode: 0664

- name: 'Copy over icat-server setup.properties'
  template:
    src: templates/setup.properties.j2
    dest: /home/glassfish/stash/icat-server/2-part
    owner: glassfish
    group: glassfish
    mode: 0664

- name: 'Configure icat-server setup.properties by concatenation of files in the stash'
  assemble:
    src: /home/glassfish/stash/icat-server
    dest: /home/glassfish/install/icat.server/setup.properties
    delimiter: '\n'
    owner: glassfish
    group: glassfish
    mode: 0600
  notify:
  - icat-server-handler

- name: 'Configure icat-server run.properties'
  template:
    src: templates/run.properties.j2
    dest: /home/glassfish/install/icat.server/run.properties
    owner: glassfish
    group: glassfish
    mode: 0664
  notify:
  - icat-server-handler

- name: 'Configure icat-server logback.xml'
  copy:
    src: files/logback.xml
    dest: /home/glassfish/install/icat.server/logback.xml
    owner: glassfish
    group: glassfish
    mode: 0664
  notify:
  - icat-server-handler

- name: 'Create database for icat-server'
  mysql_db:
    name: '{{ icat_database }}'
    login_user: '{{ db_root_username }}'
    login_password: '{{ db_root_password }}'

- name: 'Create user for icat-server database'
  mysql_user:
    name: '{{ db_icat_username }}'
    password: '{{ db_icat_password }}'
    priv: '{{ icat_database }}.*:ALL,GRANT'
    login_user: '{{ db_root_username }}'
    login_password: '{{ db_root_password }}'

- name: 'Setup icat-server if not setup'
  import_tasks: tasks/installation.yml
  when: (ansible_local is not defined) or (ansible_local.local is not defined) or (ansible_local.local.{{ heading }} is not defined) or (ansible_local.local.{{ heading }}.icat_server is not defined) or (ansible_local.local.{{ heading }}.icat_server != 'true')
